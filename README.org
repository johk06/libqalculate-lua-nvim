* Lua bindings for [[https://github.com/Qalculate/libqalculate][libqalculate]]
** Rationale
This is mainly meant as a dependency for other plugins that might want a
user to be able to enter, simplify and evaluate arbitrary math.
[[https://github.com/Qalculate/libqalculate][libqalculate]] is a natural
language calculator library and also provides a cli too, =qalc=.
Instead of using the program, which has a relatively high startup cost,
and makes it hard to get the exact results of an expression, this creates a
simple lua binding to the library itself instead.

** How to use
For most plugins, it might be a good idea to create a new =QalcCalculator=
object for the whole plugin. Creating a new calculator has a significant
cost as it reads user initialization files, currencies etc. Clear the
variables and functions instead of creating a new calculator.

*** Minimal example
#+begin_src lua
local calculator = require("qalculate").new {
    -- options for display, evaluation etc go here
}

local result = calculator:eval [[integrate(200x * pi^x)]]
-- returns the pretty printed expression
local source_text = result:source() 
local result_text = result:print()

print(string.format(
    "%s %s %s",
    source_text,
    result:is_approximate() and "â‰ˆ" or "=",
    result_text
))
#+end_src

*** More complex examples
Alternatively, there are ways to get access to the "real" mathematical values of expressions.
Some expressions might not be used particularly well for lua however.
**** Use result as a number
#+begin_src lua
local calculator = require("qalculate").new { }

-- calculate the cumulative probability in an interval
local mu = 150
local sigma = 0.4
local a = 150
local b = 155
local expr = ([[ integrate(normdist(x, %f, %f), %f, %f) ]]):format(mu, sigma, a, b)

local result = calculator:eval(expr)
print("Expr: " .. result:source())
print("Type: " .. result:type())
print("Value: " .. result:value())
#+end_src

